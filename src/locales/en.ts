export const en = {
  // Common
  common: {
    cancel: 'Cancel',
    confirm: 'Confirm',
    save: 'Save',
    delete: 'Delete',
    edit: 'Edit',
    close: 'Close',
    back: 'Back',
    next: 'Next',
    previous: 'Previous',
    loading: 'Loading...',
    error: 'Error',
    success: 'Success',
    warning: 'Warning',
    info: 'Info',
    yes: 'Yes',
    no: 'No',
    ok: 'OK',
  },
  
  // Settings Screen
  settings: {
    title: 'Settings',
    theme: 'Theme',
    inventoryOrg: 'Inventory Org',
    language: 'Language',
    about: 'About',
    logout: 'Logout',
    logoutAndClearData: 'Logout + Clear Data',
    selectLanguage: 'Select Language',
    version: 'Version - MSCA2025A-V1.1.0',
    toggleTheme: 'Toggle theme between light and dark mode',
    navigateToOrganization: 'Navigate to organization selection',
    selectLanguagePreference: 'Select language preference',
    viewAppInfo: 'View app information and version',
    signOut: 'Sign out of the application',
    signOutAndClear: 'Sign out and clear all local data',
    closeLanguageSelection: 'Close language selection',
    selectLanguageOption: 'Select {language} language',
  },
  
  // Alerts
  alerts: {
    logoutTitle: 'Logout',
    logoutMessage: 'Are you sure you want to logout?',
    logoutAndClearTitle: 'Logout & Clear Database',
    logoutAndClearMessage: 'Are you sure you want to logout and clear all local data? This will sync any pending transactions first, then clear the database. This action cannot be undone.',
    pleaseWait: 'Please wait',
    databaseProcessing: 'Database is being processed. Please wait...',
    logoutError: 'Failed to logout. Please try again.',
    logoutAndClearError: 'Failed to logout and clear data. Please try again.',
    aboutTitle: 'About',
    aboutMessage: 'App Version 1.0.0\nBuild 2024.01.15',
  },
  
  // Languages
  languages: {
    english: 'English',
    spanish: 'Spanish',
    french: 'French',
  },

  // Login Screen
  login: {
    title: 'Login',
    username: 'Username',
    password: 'Password',
    enterUsername: 'Enter username',
    enterPassword: 'Enter password',
    loginButton: 'Login',
    validationError: 'Validation Error',
    fillRequiredFields: 'Please fill in all required fields',
    loginFailed: 'Login Failed',
    unexpectedError: 'An unexpected error occurred. Please try again.',
    usernameRequired: 'Username is required',
    passwordRequired: 'Password is required',
  },

  // Activity Screen
  activity: {
    title: 'Sync Activity',
    logout: 'Logout',
    logoutButton: 'Logout button',
    logoutConfirm: 'Are you sure you want to logout? This will cancel any ongoing synchronization.',
    dataSyncStatus: 'Data Sync Status',
    progress: 'Progress',
    retryFailedApis: 'Retry {count} Failed API{plural}',
    noApisToProcess: 'No APIs to Process',
    noApisFoundMessage: 'No APIs found for the selected responsibilities. Please check your configuration or contact your administrator.',
    responsibilitiesTip: 'Make sure you have the correct responsibilities assigned to your account',
    apiEndpointNotConfigured: 'API endpoint not configured',
    unknownApi: 'Unknown API',
    unknownErrorOccurred: 'Unknown error occurred',
    never: 'Never',
    tapToToggleCard: 'Tap to {action} this card',
    collapse: 'collapse',
    expand: 'expand',
    successfulSyncStatus: 'This card shows successful sync status',
    statusForApi: '{status} status for {api}',
    apiInState: 'API {api} is in {state} state',
    toggleCard: '{action} {api} card',
    tapToToggleDetails: 'Tap to {action} more details',
    hide: 'hide',
    show: 'show',
    tapToExpand: 'Tap to expand',
    recordsInserted: '{count} records inserted',
    processingPleaseWait: 'Processing... Please wait',
    recordsSuccessfullyInserted: '{count} records successfully inserted',
    successfullyInserted: 'Successfully Inserted',
    apiEndpoint: 'API Endpoint',
    apiEndpointNotAvailable: 'API endpoint not available',
    status: 'Status',
    retryCount: 'Retry Count',
    lastRetry: 'Last Retry',
    notAvailable: 'N/A',
    retryApi: 'Retry {api} API',
    tapToRetryApi: 'Tap to retry the failed {api} API',
    retrying: 'Retrying...',
    apiType: 'API Type',
    organizationId: 'Organization ID',
    totalActivities: 'Total Activities',
    lastSync: 'Last Sync',
    retryFailed: 'Retry Failed',
    retryAll: 'Retry All',
    proceedToDashboard: 'Proceed to Dashboard',
  },

  // Organization Screen
  organization: {
    title: 'Select Organization',
    searchPlaceholder: 'Search organizations...',
    organizationsFound: '{count} organization{plural} found',
    confirmOrganization: 'Confirm Organization',
    selectOrganizationFirst: 'Select an organization first',
    confirmOrganizationSelection: 'Confirm organization selection',
    refreshingOrganizations: 'Refreshing organizations...',
    organizationsRefreshed: 'Organizations refreshed successfully',
    refreshFailed: 'Failed to refresh organizations',
  },

  // Dashboard Screen
  dashboard: {
    title: 'Home',
    loadToDock: 'Load to Dock',
    loadToDockDescription: 'Manage dock operations and track shipments',
    manage: 'Manage',
    transactions: 'Transactions',
    transactionsDescription: 'View history and sync status',
    viewAll: 'View all',
    today: 'Today',
    onTime: 'On Time',
    pending: 'Pending',
  },

  // Load to Dock Screens
  loadToDock: {
    deliveries: 'Deliveries',
    scanOrEnterBarcode: 'Scan or enter barcode',
    barcodeScanner: 'Barcode Scanner',
    searchDeliveries: 'Search deliveries',
    noMatchFound: 'No Match Found',
    noDeliveryItemsFound: 'No delivery items found for barcode: {barcode}',
    failedToSearch: 'Failed to search for barcode in database',
    sortLoadToDock: 'Sort Load to Dock',
    pickSlip: 'Pick Slip #{deliveryId}',
    itemNumber: 'Item #{itemNumber}',
    vehicleNumber: 'Vehicle Number',
    enterVehicleNumber: 'Enter vehicle number',
    searchAndScan: 'Search and Scan',
    itemsToLoad: 'Items to Load',
    itemsCount: '{filtered} of {total} items',
    noItemsFound: 'No items found',
    tryAdjustingSearch: 'Try adjusting your search or scan a barcode',
    loading: 'Loading...',
    loadToDockButton: 'Load To Dock',
    saveAndContinue: 'Save & Continue',
    cannotSave: 'Cannot Save',
    captureBothMedia: 'Please capture both photos AND video to proceed',
    mediaCapturedSuccess: 'Media captured and saved successfully!',
    failedToSaveMedia: 'Failed to save media',
    uploadPhotos: 'Upload Photos',
    uploadVideos: 'Upload Videos',
    preparingDocuments: 'Preparing documents for upload...',
    validatingRequirements: 'Validating item requirements...',
    uploadingToCloud: 'Uploading to cloud storage...',
    finalizingUpload: 'Finalizing upload...',
    uploadComplete: 'Upload complete!',
    dataSavedLocally: 'Data saved locally and will sync when you\'re back online',
    documentsUploadedSuccess: 'Documents uploaded to cloud storage successfully!',
    failedToUpload: 'Failed to upload documents to cloud storage',
    noValidItems: 'No valid items found. Please ensure all items have media and quantity.',
    itemFound: 'Item Found',
    scanned: 'Scanned: {barcode}',
    itemNotFound: 'Item Not Found',
    noItemWithBarcode: 'No item found with barcode: {barcode}',
    scanError: 'Scan Error',
    failedToProcessBarcode: 'Failed to process scanned barcode',
    scannerError: 'Scanner Error',
    requested: 'Requested',
    loaded: 'Loaded',
    photos: 'Photos',
    videos: 'Videos',
    uploaded: 'uploaded',
    pending: 'pending',
    quantityExceeded: 'Loaded quantity cannot exceed requested quantity',
    noPhotosCaptured: 'No photos captured yet',
    useButtonsToAdd: 'Use the buttons above to add photos and videos',
  },

  // Transaction History Screen
  transactionHistory: {
    title: 'Transaction History',
    searchTransactions: 'Search transactions...',
    noTransactionsFound: 'No Transactions Found',
    noTransactionsRecorded: 'No transactions have been recorded yet.',
    noStatusTransactions: 'No {status} transactions found.',
    loadingTransactions: 'Loading transactions...',
  },

  // Common UI Elements
  ui: {
    back: 'Back',
    home: 'Home',
    refresh: 'Refresh',
    search: 'Search',
    scan: 'Scan',
    sort: 'Sort',
    filter: 'Filter',
    save: 'Save',
    cancel: 'Cancel',
    confirm: 'Confirm',
    retry: 'Retry',
    sync: 'Sync',
    loading: 'Loading...',
    error: 'Error',
    success: 'Success',
    warning: 'Warning',
    info: 'Info',
    close: 'Close',
    done: 'Done',
    next: 'Next',
    previous: 'Previous',
    yes: 'Yes',
    no: 'No',
    ok: 'OK',
    date: 'DATE',
    of: 'of',
    reset: 'Reset',
    apply: 'Apply',
  },

  // Sort and Filter
  sortFilter: {
    sortBy: 'Sort By',
    filterBy: 'Filter By',
  },

  // Banner Messages
  banner: {
    uploadingDocuments: 'Uploading Documents',
    uploadComplete: 'Upload Complete',
    uploadFailed: 'Upload Failed',
    savedOffline: 'Saved Offline',
    processing: 'Processing',
  },

  // Notification Center
  notifications: {
    issuesFound: '{count} Issue{plural} Found',
    apiFailuresInsertionIssues: '{apiFailures} API failures, {insertionIssues} insertion issues',
    partialDataInsertionFailure: 'Partial data insertion failure',
    justNow: 'Just now',
    minutesAgo: '{minutes}m ago',
    hoursAgo: '{hours}h ago',
    daysAgo: '{days}d ago',
    noRecords: 'No records',
    recordsInserted: '{count} inserted',
    recordsInsertedFailed: '{inserted} inserted / {failed} failed',
    unknownApi: 'Unknown API',
    noErrorDetailsAvailable: 'No error details available',
    affectedRecords: 'Affected Records',
    total: 'Total',
    inserted: 'Inserted',
    failed: 'Failed',
    dataRefreshedSuccessfully: 'Data refreshed successfully',
    refreshFailed: 'Refresh Failed',
    organizationsRefreshedSuccessfully: 'Organizations refreshed successfully',
    failedToRefreshOrganizations: 'Failed to refresh organizations',
    dashboardDataRefreshedSuccessfully: 'Dashboard data refreshed successfully',
    failedToRefreshDashboardData: 'Failed to refresh dashboard data',
    refreshComplete: 'Refresh Complete',
    refreshCompleteSuccess: 'Successfully refreshed {apis} APIs. {records} records updated in {seconds}s.',
    refreshPartiallyComplete: 'Refresh Partially Complete',
    refreshPartiallyCompleteMessage: '{successful}/{total} APIs succeeded. {records} records updated.',
    refreshFailedAllApis: 'All APIs failed. Please check your connection and try again.',
    refreshAlreadyRunning: 'Refresh Already Running',
    refreshAlreadyRunningMessage: 'A refresh operation is already in progress',
    organizationIdNotAvailable: 'Organization ID not available',
    noResponsibilities: 'No Responsibilities',
    noResponsibilitiesMessage: 'No responsibilities available for refresh',
    refreshCancelled: 'Refresh Cancelled',
    refreshCancelledMessage: 'Data refresh was cancelled',
    unknownErrorOccurred: 'Unknown error occurred',
    noApisSelected: 'No APIs Selected',
    noApisSelectedMessage: 'No APIs specified for refresh',
  },
};
